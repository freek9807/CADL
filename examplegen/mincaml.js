// Generated automatically by nearley, version 2.15.1
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "e$string$1", "symbols": [{"literal":"i"}, {"literal":"f"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e$string$2", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e$string$3", "symbols": [{"literal":"e"}, {"literal":"l"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e", "symbols": ["e$string$1", "__", "bexp", "__", "e$string$2", "__", {"literal":"("}, "nexp", {"literal":")"}, "__", "e$string$3", "__", {"literal":"("}, "nexp", {"literal":")"}]},
    {"name": "e$string$4", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e$string$5", "symbols": [{"literal":"i"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e", "symbols": ["e$string$4", "__", "id", {"literal":"="}, {"literal":"("}, "nexp", {"literal":")"}, "__", "e$string$5", "__", {"literal":"("}, "e", {"literal":")"}]},
    {"name": "e$string$6", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e$string$7", "symbols": [{"literal":"r"}, {"literal":"e"}, {"literal":"c"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e$string$8", "symbols": [{"literal":"i"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e", "symbols": ["e$string$6", "__", "e$string$7", "__", "fdef", "__", "e$string$8", "__", {"literal":"("}, "e", {"literal":")"}]},
    {"name": "e$string$9", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e$string$10", "symbols": [{"literal":"i"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e", "symbols": ["e$string$9", "__", {"literal":"("}, "pat", {"literal":")"}, "__", {"literal":"="}, "__", {"literal":"("}, "nexp", {"literal":")"}, "__", "e$string$10", "__", {"literal":"("}, "e", {"literal":")"}]},
    {"name": "e$string$11", "symbols": [{"literal":"A"}, {"literal":"r"}, {"literal":"r"}, {"literal":"a"}, {"literal":"y"}, {"literal":"."}, {"literal":"c"}, {"literal":"r"}, {"literal":"e"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "e", "symbols": ["e$string$11", "__", {"literal":"("}, "num", {"literal":")"}, "__", {"literal":"("}, "num", {"literal":")"}]},
    {"name": "e", "symbols": [{"literal":"("}, "id", "__", "aargs", {"literal":")"}]},
    {"name": "e", "symbols": ["els"]},
    {"name": "e", "symbols": [{"literal":"("}, "e", {"literal":";"}, "__", "e", {"literal":")"}]},
    {"name": "e", "symbols": ["se"]},
    {"name": "e", "symbols": ["bexp"]},
    {"name": "e", "symbols": ["nexp"]},
    {"name": "e", "symbols": ["fexp"]},
    {"name": "se", "symbols": [{"literal":"("}, "e", {"literal":")"}]},
    {"name": "se", "symbols": [{"literal":"("}, {"literal":")"}]},
    {"name": "se", "symbols": ["bval"]},
    {"name": "se", "symbols": ["num"]},
    {"name": "se", "symbols": ["fl"]},
    {"name": "se", "symbols": ["id"]},
    {"name": "se", "symbols": ["se", {"literal":"."}, {"literal":"("}, "e", {"literal":")"}]},
    {"name": "fdef", "symbols": ["id", "__", "fargs", {"literal":":"}, "type", "__", {"literal":"="}, "__", {"literal":"("}, "e", {"literal":")"}]},
    {"name": "fargs", "symbols": [{"literal":"("}, "id", {"literal":":"}, "type", {"literal":")"}, "__", "fargs"]},
    {"name": "fargs", "symbols": [{"literal":"("}, "id", {"literal":":"}, "type", {"literal":")"}]},
    {"name": "aargs", "symbols": ["aargs", "__", "se"]},
    {"name": "aargs", "symbols": ["se"]},
    {"name": "els", "symbols": ["els", {"literal":","}, "__", "e"]},
    {"name": "els", "symbols": ["e", {"literal":","}, "__", "e"]},
    {"name": "pat", "symbols": ["pat", {"literal":","}, "__", "id"]},
    {"name": "pat", "symbols": ["id", {"literal":","}, "__", "id"]},
    {"name": "type$string$1", "symbols": [{"literal":"i"}, {"literal":"n"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "type", "symbols": ["type$string$1"]},
    {"name": "type$string$2", "symbols": [{"literal":"b"}, {"literal":"o"}, {"literal":"o"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "type", "symbols": ["type$string$2"]},
    {"name": "type$string$3", "symbols": [{"literal":"u"}, {"literal":"n"}, {"literal":"i"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "type", "symbols": ["type$string$3"]},
    {"name": "type$string$4", "symbols": [{"literal":"f"}, {"literal":"l"}, {"literal":"o"}, {"literal":"a"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "type", "symbols": ["type$string$4"]},
    {"name": "type", "symbols": [{"literal":"["}, "type", {"literal":"]"}]},
    {"name": "type", "symbols": [{"literal":"("}, "ltype", {"literal":")"}]},
    {"name": "type$string$5", "symbols": [{"literal":"-"}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "type", "symbols": ["ltype", "type$string$5", "type"]},
    {"name": "ltype", "symbols": ["type", {"literal":"*"}, "ltype"]},
    {"name": "ltype", "symbols": ["type"]},
    {"name": "id$ebnf$1", "symbols": []},
    {"name": "id$ebnf$1", "symbols": ["id$ebnf$1", /[a-zA-Z0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "id", "symbols": [/[a-z]/, "id$ebnf$1"]},
    {"name": "bval$string$1", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"l"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bval", "symbols": ["bval$string$1"]},
    {"name": "bval$string$2", "symbols": [{"literal":"t"}, {"literal":"r"}, {"literal":"u"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bval", "symbols": ["bval$string$2"]},
    {"name": "num$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "num$ebnf$1", "symbols": ["num$ebnf$1", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "num", "symbols": ["num$ebnf$1"]},
    {"name": "fl$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "fl$ebnf$1", "symbols": ["fl$ebnf$1", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "fl$ebnf$2", "symbols": [/[0-9]/]},
    {"name": "fl$ebnf$2", "symbols": ["fl$ebnf$2", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "fl", "symbols": ["fl$ebnf$1", {"literal":"."}, "fl$ebnf$2"]},
    {"name": "bexp", "symbols": ["bval"]},
    {"name": "bexp", "symbols": [{"literal":"("}, "nexp", "__", "cop", "__", "nexp", {"literal":")"}]},
    {"name": "bexp$string$1", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bexp", "symbols": [{"literal":"("}, "bexp$string$1", "__", "bexp", {"literal":")"}]},
    {"name": "cop", "symbols": [{"literal":"="}]},
    {"name": "cop$string$1", "symbols": [{"literal":"<"}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "cop", "symbols": ["cop$string$1"]},
    {"name": "cop", "symbols": [{"literal":"<"}]},
    {"name": "cop", "symbols": [{"literal":">"}]},
    {"name": "cop$string$2", "symbols": [{"literal":"<"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "cop", "symbols": ["cop$string$2"]},
    {"name": "cop$string$3", "symbols": [{"literal":">"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "cop", "symbols": ["cop$string$3"]},
    {"name": "nexp", "symbols": ["num"]},
    {"name": "nexp", "symbols": [{"literal":"("}, "nexp", "__", "ibop", "__", "nexp", {"literal":")"}]},
    {"name": "nexp", "symbols": [{"literal":"("}, {"literal":"-"}, "__", "nexp", {"literal":")"}]},
    {"name": "ibop", "symbols": [{"literal":"+"}]},
    {"name": "ibop", "symbols": [{"literal":"-"}]},
    {"name": "ibop", "symbols": [{"literal":"*"}]},
    {"name": "fexp", "symbols": ["fl"]},
    {"name": "fexp", "symbols": [{"literal":"("}, "fexp", "__", "fbop", "__", "fexp", {"literal":")"}]},
    {"name": "fexp$string$1", "symbols": [{"literal":"-"}, {"literal":"."}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "fexp", "symbols": [{"literal":"("}, "fexp$string$1", "__", "fexp", {"literal":")"}]},
    {"name": "fbop$string$1", "symbols": [{"literal":"+"}, {"literal":"."}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "fbop", "symbols": ["fbop$string$1"]},
    {"name": "fbop$string$2", "symbols": [{"literal":"-"}, {"literal":"."}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "fbop", "symbols": ["fbop$string$2"]},
    {"name": "fbop$string$3", "symbols": [{"literal":"*"}, {"literal":"."}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "fbop", "symbols": ["fbop$string$3"]},
    {"name": "fbop$string$4", "symbols": [{"literal":"/"}, {"literal":"."}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "fbop", "symbols": ["fbop$string$4"]},
    {"name": "__", "symbols": ["wschar"]},
    {"name": "wschar", "symbols": [/[ ]/]}
]
  , ParserStart: "e"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
